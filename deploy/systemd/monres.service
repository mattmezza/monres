[Unit]
Description=Lightweight VPS Resource Monitor (monres)
Documentation=https://github.com/yourusername/monres/README.md
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=monres # Create this user: useradd --system --shell /sbin/nologin --home-dir /var/lib/monres monres
Group=monres # Create this group: groupadd --system monres
# Ensure /var/lib/monres is writable by monres user for state_file
# Ensure /etc/monres is readable by monres user for config file

# Path to the compiled binary
ExecStart=/usr/local/bin/monres -config /etc/monres/config.yaml

# Restart policy
Restart=on-failure
RestartSec=5s

# Environment variables for sensitive data
# It's better to use EnvironmentFile for multiple secrets
EnvironmentFile=/etc/monres/monres.env # This file should have 0600 permissions, owned by monresuser

# Standard output and error logging
StandardOutput=journal
StandardError=journal

# Security hardening
# NoNewPrivileges=true # If your Go app doesn't need to fork/exec other things with higher privileges
# PrivateTmp=true
# ProtectSystem=strict # Mounts /usr, /boot, /etc as read-only for the service
# ProtectHome=true     # Makes home directories inaccessible
# ReadWritePaths=/var/lib/monres # Only if state_file is here
# ReadOnlyPaths=/etc/monres # If config is here and not modified by app

CapabilityBoundingSet=~CAP_SYS_ADMIN CAP_NET_ADMIN # Drop unnecessary capabilities
# Minimal capabilities needed:
# - Reading /proc, /sys doesn't typically require special capabilities if file permissions allow.
# - Network for notifications.
# Set to empty if no special capabilities are needed beyond normal user:
# CapabilityBoundingSet=

[Install]
WantedBy=multi-user.target
